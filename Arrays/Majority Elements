We can solve with Three ways ..

By using half of it and return mid element
By using hashMap..to find the frequency and then highest frequency check is it greater than helf.
By using Moore's Alogorithms.


Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.





 class Solution {
    public int majorityElement(int[] nums) {
        int res = nums[0];
        int count = 1;
    
        for (int i = 0;  i<nums.length; i++) {
            int num = nums[i];
            if (res == num) ++count;
            else --count;
        
            if (count == 0) {
                res = num;
                count = 1;
            }
        }
    
        return res;
    }
}
